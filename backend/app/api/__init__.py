"""
–û—Å–Ω–æ–≤–Ω–æ–π —Ä–æ—É—Ç–µ—Ä API
–û–±—ä–µ–¥–∏–Ω—è–µ—Ç –≤—Å–µ endpoint'—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
"""

from fastapi import APIRouter

from .users import router as users_router
from .mood_entries import router as mood_entries_router
from .analytics import router as analytics_router

# –°–æ–∑–¥–∞–Ω–∏–µ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ —Ä–æ—É—Ç–µ—Ä–∞
api_router = APIRouter()

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–µ—Ä–æ–≤
api_router.include_router(
    users_router, 
    prefix="/users", 
    tags=["users"],
    responses={404: {"description": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω"}}
)

api_router.include_router(
    mood_entries_router, 
    prefix="/mood-entries", 
    tags=["mood-entries"],
    responses={404: {"description": "–ó–∞–ø–∏—Å—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"}}
)

api_router.include_router(
    analytics_router, 
    prefix="/analytics", 
    tags=["analytics"],
    responses={404: {"description": "–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"}}
)

# –û—Å–Ω–æ–≤–Ω—ã–µ endpoint'—ã
@api_router.get("/status")
async def get_status():
    """–°—Ç–∞—Ç—É—Å API"""
    return {
        "status": "active",
        "message": "AI Mood Diary Bot API —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ! üöÄ",
        "version": "1.0.0",
        "features": [
            "FastAPI backend",
            "SQLite database", 
            "Telegram Bot integration",
            "Gemini AI analysis",
            "Vue.js frontend",
            "Real-time analytics"
        ]
    }


@api_router.get("/health")
async def health_check():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–∏—Å–∞"""
    from ..services.gemini_service import gemini_service
    from ..core.config import settings
    
    return {
        "status": "healthy",
        "service": "ai-mood-diary-bot",
        "version": "1.0.0",
        "components": {
            "database": "connected",
            "gemini_ai": "available" if gemini_service.is_available() else "unavailable",
            "telegram_bot": "configured" if settings.TELEGRAM_BOT_TOKEN else "not_configured"
        }
    }